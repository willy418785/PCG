"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Character_1 = require("./Character");
const CharacterDraw_1 = require("./CharacterDraw");
const PlayerInput_1 = require("./PlayerInput");
const EventListenerHandler_1 = require("./EventListenerHandler");
const PlayerInputProcessor_1 = require("./PlayerInputProcessor");
var characterDraw;
var playerInputListener;
var playerInput;
var playerInputProcessor;
var FPS = 60;
var FRAME_INTERVAL = 1000 / FPS;
function initialize() {
    var temp = document.getElementById("canvas");
    var canvas = temp;
    canvas.width = 500;
    canvas.height = 400;
    var gravityCoefficient;
    var characterWidth = 30;
    var characterHeight = 30;
    var ATTACK_ANIMATION_FRAME;
    var TURN_AROUND_FRAME;
    var x = canvas.width / 2;
    var y = canvas.height / 2;
    var upperSpeedAccelerationUnit;
    var lowerSpeedAccelerationUnit;
    var rightSpeedAccelerationUnit = 5;
    var leftySpeedAccelerationUnit = 5;
    var upperSpeadUpperBound;
    var lowerSpeadUpperBound;
    var rightSpeadUpperBound;
    var leftySpeadUpperBound;
    var upperSpeedAccelerationUpperBound;
    var lowerSpeedAccelerationUpperBound;
    var rightSpeedAccelerationUpperBound = 20;
    var leftySpeedAccelerationUpperBound = 20;
    var ctx = canvas.getContext("2d");
    var player = new Character_1.Character(gravityCoefficient, characterWidth, characterHeight, ATTACK_ANIMATION_FRAME, TURN_AROUND_FRAME, x, y, upperSpeedAccelerationUnit, lowerSpeedAccelerationUnit, rightSpeedAccelerationUnit, leftySpeedAccelerationUnit, upperSpeadUpperBound, lowerSpeadUpperBound, rightSpeadUpperBound, leftySpeadUpperBound, upperSpeedAccelerationUpperBound, lowerSpeedAccelerationUpperBound, rightSpeedAccelerationUpperBound, leftySpeedAccelerationUpperBound);
    characterDraw = new CharacterDraw_1.CharacterDraw(player, canvas);
    characterDraw.draw();
    playerInput = new PlayerInput_1.PlayerInput();
    playerInputListener = new EventListenerHandler_1.EventListenerHandler(document, playerInput);
    playerInputListener.AddKeypressEventListener();
    playerInputListener.AddClickEventListener();
    playerInputProcessor = new PlayerInputProcessor_1.PlayerInputProcessor(player, playerInput);
    setTimeout(update, FRAME_INTERVAL);
}
function update() {
    playerInputProcessor.process();
    characterDraw.draw();
    setTimeout(update, FRAME_INTERVAL);
}
initialize();
